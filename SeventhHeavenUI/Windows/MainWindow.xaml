<Window x:Class="SeventhHeavenUI.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:SeventhHeavenUI"
        xmlns:ctrl="clr-namespace:SeventhHeaven.UserControls"
        xmlns:cls="clr-namespace:SeventhHeaven.Classes"
        xmlns:gif="https://github.com/XamlAnimatedGif/XamlAnimatedGif"
        mc:Ignorable="d"
        Title="{Binding WindowTitle, FallbackValue='7th Heaven v2.0.0 - Mod Manager for Final Fantasy 7 ( Maintained by the Tsunamods Team ) [Current Loaded Profile]'}"
        Style="{StaticResource MainWindowStyle}"
        WindowStartupLocation="CenterScreen"
        Loaded="Window_Loaded"
        SizeChanged="Window_SizeChanged"
        Closing="Window_Closing"
        Height="600" Width="1100"
        MinHeight="520" MinWidth="870">
    <Window.Resources>

        <Style x:Key="ModInfoLabelStyle" TargetType="{x:Type TextBlock}">
            <Setter Property="FontSize" Value="13"/>
            <Setter Property="Margin" Value="0,0,3,1"/>
            <Setter Property="FontWeight" Value="DemiBold"/>
            <Setter Property="VerticalAlignment" Value="Bottom"/>
        </Style>

        <Style x:Key="ModInfoDetailsStyle" TargetType="{x:Type TextBlock}" BasedOn="{StaticResource ModInfoLabelStyle}">
            <Setter Property="FontWeight" Value="Normal"/>
            <Setter Property="TextWrapping" Value="Wrap"/>
            <Setter Property="Padding" Value="0,0,0,0"/>
            <Setter Property="FontSize" Value="12"/>
        </Style>

        <Style x:Key="ReadMeStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource HyperlinkButton}">
            <Setter Property="Content" Value="{DynamicResource ClickHere}"/>
            <Setter Property="Padding" Value="5,2,2,2"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding PreviewModHasReadMe}" Value="False">
                    <Setter Property="Content" Value="{DynamicResource None}"/>
                    <Setter Property="Padding" Value="2"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="OpenLinkStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource HyperlinkButton}">
            <Setter Property="Content" Value="{DynamicResource ClickHere}"/>
            <Setter Property="Padding" Value="5,2,2,2"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding PreviewModHasLink, FallbackValue='False'}" Value="False">
                    <Setter Property="Content" Value="{DynamicResource None}"/>
                    <Setter Property="Padding" Value="2"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <DataTemplate x:Key="FilterItemTemplate">
            <Border Background="{DynamicResource PrimaryControlBackground}" Padding="5" Focusable="False">
                <CheckBox Content="{Binding Name, FallbackValue='Category Name'}"
                          IsChecked="{Binding IsChecked, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
            </Border>
        </DataTemplate>

        <DataTemplate x:Key="FilterItemSeparatorTemplate">
            <Border Background="{DynamicResource SecondaryAppBackground}" Height="2" Padding="5" Focusable="False"/>
        </DataTemplate>

        <Style x:Key="CategoryFilterListBoxItem" TargetType="{x:Type ListBoxItem}">
            <Setter Property="Background" Value="{DynamicResource PrimaryControlBackground}"/>
            <Setter Property="ContentTemplate" Value="{StaticResource FilterItemTemplate}"/>
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ListBoxItem">
                        <Border x:Name="Border" Padding="2" SnapsToDevicePixels="true" Background="{TemplateBinding Background}">
                            <ContentPresenter VerticalAlignment="{TemplateBinding VerticalContentAlignment}" TextElement.Foreground="{DynamicResource PrimaryControlForeground}" ContentTemplate="{TemplateBinding ContentTemplate}"/>
                        </Border>

                        <ControlTemplate.Triggers>

                            <DataTrigger Binding="{Binding FilterType, FallbackValue='0'}" Value="3">
                                <Setter Property="ContentTemplate" Value="{StaticResource FilterItemSeparatorTemplate}"/>
                                <Setter Property="IsEnabled" Value="False"/>
                                <Setter Property="IsHitTestVisible" Value="False"/>
                                <Setter Property="Focusable" Value="False"/>
                            </DataTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="SmallImageButton"  TargetType="{x:Type Button}" BasedOn="{StaticResource ImageButton}">
            <Setter Property="Height" Value="40"/>
            <Setter Property="Width" Value="44"/>
        </Style>
        <ControlTemplate x:Key="iconCloudPlay2">
            <Canvas xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" x:Name="appbar_cloud_play" Width="76" Height="76" Clip="F1 M 0,0L 76,0L 76,76L 0,76L 0,0">
                <Path Width="38" Height="34.2501" Canvas.Left="19" Canvas.Top="23.7499" Stretch="Fill" Fill="{Binding Foreground, RelativeSource={RelativeSource Mode=TemplatedParent}}" Data="F1 M 23,37L 33.5,47.5L 23,58L 23,37 Z M 49.0833,28.5C 53.4555,28.5 57,32.0445 57,36.4167C 57,40.7889 53.4045,43.9999 49,44L 32.5,44L 22.7419,34.5753C 23.3431,32.2729 24.992,30.1997 27.4553,30.0889C 28.7579,26.3962 32.2783,23.7499 36.4167,23.7499C 40.3459,23.7499 43.7179,26.1353 45.1637,29.5369C 46.3193,28.877 47.6573,28.5 49.0833,28.5 Z M 19,40.375C 19,38.4599 20.1932,36.8667 22,36.5L 22,44C 20.1932,43.6332 19,42.29 19,40.375 Z "/>
            </Canvas>
        </ControlTemplate>
        <ControlTemplate x:Key="iconCloudPause2">
            <Canvas xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" x:Name="appbar_cloud_pause" Width="76" Height="76" Clip="F1 M 0,0L 76,0L 76,76L 0,76L 0,0">
                <Path Width="38" Height="33.2501" Canvas.Left="19" Canvas.Top="23.7499" Stretch="Fill" Fill="{Binding Foreground, RelativeSource={RelativeSource Mode=TemplatedParent}}" Data="F1 M 22,38L 27,38L 27,57L 22,57L 22,38 Z M 31,38L 36,38L 36,57L 31,57L 31,38 Z M 49.0833,28.5C 53.4555,28.5 57,32.0445 57,36.4167C 57,40.7889 53.9046,43.9999 49.5,44L 37,44L 37,37L 30,37L 30,44L 28,44L 28,37L 22.25,37L 22.1667,35.6249C 22.1667,32.6493 24.5123,30.2213 27.4553,30.0889C 28.7579,26.3962 32.2783,23.7499 36.4167,23.7499C 40.3459,23.7499 43.7179,26.1353 45.1637,29.5369C 46.3193,28.877 47.6573,28.5 49.0833,28.5 Z M 19,40.375C 19,39.08 20.0386,37.7221 21,37L 21,44C 20.0386,43.2778 19,41.67 19,40.375 Z "/>
            </Canvas>
        </ControlTemplate>
        <ControlTemplate x:Key="iconCloudStop2">
            <Canvas xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" x:Name="appbar_cloud_delete" Width="76" Height="76" Clip="F1 M 0,0L 76,0L 76,76L 0,76L 0,0">
                <Path Width="41.1667" Height="27.4151" Canvas.Left="15.8333" Canvas.Top="28.4999" Stretch="Fill" Fill="{Binding Foreground, RelativeSource={RelativeSource Mode=TemplatedParent}}" Data="F1 M 15.8333,41.3605L 19.1921,38.0017L 24.79,43.5996L 30.3879,38.0017L 33.7467,41.3605L 28.1488,46.9584L 33.7467,52.5563L 30.3879,55.9151L 24.79,50.3171L 19.1921,55.9151L 15.8333,52.5563L 21.4313,46.9584L 15.8333,41.3605 Z M 49.0833,33.25C 53.4555,33.25 57,36.7945 57,41.1667C 57,45.5389 53.4045,48.9999 49,49L 31.75,49L 29.8154,46.9584L 35.4133,41.3605L 30.3879,36.4283L 24.5867,42.2296L 22.3442,39.7371C 23.25,37 25.2617,34.9376 27.4553,34.8389C 28.7579,31.1462 32.2783,28.4999 36.4167,28.4999C 40.3459,28.4999 43.7179,30.8853 45.1637,34.2869C 46.3193,33.627 47.6573,33.25 49.0833,33.25 Z "/>
            </Canvas>
        </ControlTemplate>
        <ControlTemplate x:Key="iconReset2">
            <Canvas xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" x:Name="appbar_reset" Width="76" Height="76" Clip="F1 M 0,0L 76,0L 76,76L 0,76L 0,0">
                <Path Width="39.5833" Height="42.75" Canvas.Left="19" Canvas.Top="14.25" Stretch="Fill" Fill="{Binding Foreground, RelativeSource={RelativeSource Mode=TemplatedParent}}" Data="F1 M 19,45.9167L 25.6082,45.9167C 28.6524,49.3179 33.0762,51.4583 38,51.4583C 42.9238,51.4583 47.3476,49.3179 50.3918,45.9167L 58.5833,45.9167L 58.5833,57L 19,57L 19,45.9167 Z M 56.2083,48.2917L 53.4374,48.2917L 53.4374,53.0417L 56.2083,53.0417L 56.2083,48.2917 Z M 39.5833,33.25L 30.0833,23.75L 39.5833,14.25L 39.5833,20.6703C 46.7082,21.4579 52.25,27.4985 52.25,34.8333C 52.25,42.7034 45.8701,49.0833 38,49.0833C 30.1299,49.0833 23.75,42.7034 23.75,34.8333C 23.75,32.0174 24.5668,29.3923 25.9763,27.1819L 30.6522,30.1575C 29.7908,31.5083 29.2917,33.1125 29.2917,34.8333C 29.2917,39.6428 33.1905,43.5417 38,43.5417C 42.8095,43.5417 46.7083,39.6428 46.7083,34.8333C 46.7083,30.5646 43.6368,27.0132 39.5833,26.2686L 39.5833,33.25 Z "/>
            </Canvas>
        </ControlTemplate>
        <Style x:Key="ControlListViewItemStyle" TargetType="{x:Type ListViewItem}" BasedOn="{StaticResource MainListViewItemStyle}">
            <Setter Property="Height" Value="34"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
        </Style>
        <Style x:Key="DownloadListViewItem" TargetType="{x:Type ListViewItem}" BasedOn="{StaticResource ControlListViewItemStyle}">
            <Setter Property="Tag" Value="TransparentBg"/>

            <Style.Triggers>
                <DataTrigger Binding="{Binding IsSelected}" Value="False">
                    <Setter Property="Tag" Value=""/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
    </Window.Resources>
    <Grid>
        <Grid Background="Transparent">
            <Grid.RowDefinitions>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="280*"/>
                <RowDefinition Height="213*"/>
                <RowDefinition Height="auto"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="244*"/>
                <ColumnDefinition Width="153*"/>
                <ColumnDefinition Width="490*"/>
                <ColumnDefinition Width="205*"/>
            </Grid.ColumnDefinitions>


            <Viewbox HorizontalAlignment="Left" VerticalAlignment="Top" Margin="0,5,0,0" Grid.ColumnSpan="2" Stretch="UniformToFill" StretchDirection="DownOnly" Height="35" Width="354">
                <WrapPanel>
                    <cls:ButtonWithImage x:Name="btnPlay" 
                                     Click="btnPlay_Click" 
                                     Content="{DynamicResource Play}" 
                                     Margin="5,0,0,0"
                                     Padding="0,8,10,0"
                                     IsEnabled="{Binding IsPlayButtonEnabled}"
                                     TemplateSource="{StaticResource iconPlay}" 
                                     ImageForeground="ForestGreen" Background="#FF1F1F1F"/>
                    <ToggleButton x:Name="btnPlayOptions" 
                              Click="btnPlayOptions_Click" 
                              Style="{StaticResource DownArrowToggleButton}" 
                              IsEnabled="{Binding IsPlayToggleButtonEnabled}"
                              Margin="0,0,0,0" 
                              ContextMenuService.Placement="Bottom" d:IsHidden="True">
                        <ToggleButton.ContextMenu>
                            <ContextMenu x:Name="menuPlayOptions" Closed="menuPlayOptions_Closed">
                                <MenuItem x:Name="menuPlayWithMods" Header="{DynamicResource PlayWithMods}" Click="menuPlayWithMods_Click"/>
                                <MenuItem x:Name="menuPlayWithoutMods" Header="{DynamicResource PlayWithNoMods}" Click="menuPlayWithoutMods_Click"/>
                                <MenuItem Style="{StaticResource ContextMenuSeperator}"/>
                                <MenuItem x:Name="menuPlayDebugLog" Header="{DynamicResource PlayWithDebugLog}" Click="menuPlayDebugLog_Click"/>
                                <MenuItem x:Name="menuPlayNoValidation" Header="{DynamicResource PlayWithMinimalValidation}" Click="menuPlayWithoutValidation_Click"/>
                                <MenuItem x:Name="menuPlayVariableDump" Header="{DynamicResource PlayWithVariableDump}" Click="menuPlayVariableDump_Click"/>
                            </ContextMenu>
                        </ToggleButton.ContextMenu>
                    </ToggleButton>


                    <cls:ButtonWithImage x:Name="btnSettings" Content="{DynamicResource Settings}" Margin="0,0,0,0" Style="{StaticResource ButtonWithImageAndDownArrow}" TemplateSource="{StaticResource iconSettings}" ContextMenuService.Placement="Bottom" Click="btnSettings_Click">
                        <cls:ButtonWithImage.ContextMenu>
                            <ContextMenu x:Name="menuSettings" Closed="menuSettings_Closed">
                                <MenuItem x:Name="menuItemThemeSettings" Header="{DynamicResource ChangeColorTheme}" Click="menuItemThemeSettings_Click"/>
                                <MenuItem x:Name="menuItemControls" Header="{DynamicResource ControlsMenuItemText}" Click="menuItemControls_Click"/>
                                <MenuItem x:Name="menuItemAaliSettings" Header="{DynamicResource GameDriver}" Click="menuItemAaliSettings_Click"/>
                                <MenuItem x:Name="menuItemLaunchSettings" Header="{DynamicResource GameLauncher}" Click="menuItemLaunchSettings_Click"/>
                                <MenuItem x:Name="menuItemGeneralSettings" Header="{DynamicResource GeneralSettings}" Click="menuItemGeneralSettings_Click"/>
                                <MenuItem x:Name="menuItemSetLanguage" Header="{DynamicResource Language}" Click="menuItemSetLanguage_Click"/>
                                <MenuItem x:Name="menuItemOpenProfile" Header="{DynamicResource Profiles}" Click="menuItemOpenProfile_Click"/>
                            </ContextMenu>
                        </cls:ButtonWithImage.ContextMenu>
                    </cls:ButtonWithImage>

                    <cls:ButtonWithImage x:Name="btnTools" Content="{DynamicResource Tools}" Margin="0,0,0,0" Style="{StaticResource ButtonWithImageAndDownArrow}" TemplateSource="{StaticResource iconTools}" ContextMenuService.Placement="Bottom" Click="btnTools_Click" d:IsHidden="True">
                        <cls:ButtonWithImage.ContextMenu>
                            <ContextMenu x:Name="menuTools" Closed="menuTools_Closed">
                                <MenuItem x:Name="menuItemCatalogCreation" Header="{DynamicResource CatalogModCreationTool}" Click="menuItemCatalogCreation_Click"/>
                                <MenuItem x:Name="menuItemChunkTool" Header="{DynamicResource ChunkTool}" Click="menuItemChunkTool_Click"/>
                                <MenuItem x:Name="menuItemIroCreation" Header="{DynamicResource IROTools}" Click="menuItemIroCreation_Click"/>
                                <MenuItem x:Name="menuItemMovieImport" Header="{DynamicResource MovieImporter}" Click="menuItemMovieImport_Click"/>

                            </ContextMenu>
                        </cls:ButtonWithImage.ContextMenu>
                    </cls:ButtonWithImage>

                    <cls:ButtonWithImage x:Name="btnHelp" Content="{DynamicResource Help}" TemplateSource="{StaticResource iconHelp}" Margin="0,0,5,0" Padding="0,8,10,0" Click="btnHelp_Click"/>

                </WrapPanel>
            </Viewbox>


            <GroupBox x:Name="gbModInfo" Header="{DynamicResource ModInfoHeader}"
                  Background="{DynamicResource SecondaryAppBackground}"
                  Margin="5,42,3,1" Grid.ColumnSpan="2" Grid.RowSpan="3" d:IsHidden="True">
                <Grid x:Name="gridOuterMod">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="1.25*"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>

                    <ScrollViewer Grid.Row="0" VerticalScrollBarVisibility="Auto">
                        <Grid x:Name="gridModInfo" Margin="0,0,0,3">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="auto"/>
                                <RowDefinition Height="auto"/>
                                <RowDefinition Height="auto"/>
                                <RowDefinition Height="auto"/>
                                <RowDefinition Height="auto"/>
                                <RowDefinition Height="auto"/>
                                <RowDefinition Height="auto"/>
                                <RowDefinition Height="auto"/>
                                <RowDefinition Height="auto"/>
                            </Grid.RowDefinitions>


                            <WrapPanel Margin="3,5,3,0" Grid.Row="0">
                                <TextBlock Text="{DynamicResource NameLabel}" Style="{StaticResource ModInfoLabelStyle}"/>
                                <TextBlock Text="{Binding PreviewModName, FallbackValue=My Cool New Mod}" 
                               Style="{StaticResource ModInfoDetailsStyle}"/>
                            </WrapPanel>

                            <WrapPanel Margin="3,0,3,0" Grid.Row="1">
                                <TextBlock Text="{DynamicResource AuthorLabel}" Style="{StaticResource ModInfoLabelStyle}"/>
                                <TextBlock Text="{Binding PreviewModAuthor, FallbackValue=FF7ModDude}" 
                               Style="{StaticResource ModInfoDetailsStyle}"/>
                            </WrapPanel>

                            <WrapPanel Margin="3,0,3,0" Grid.Row="2">
                                <TextBlock Text="{DynamicResource ReleasedLabel}" Style="{StaticResource ModInfoLabelStyle}"/>
                                <TextBlock Text="{Binding PreviewModReleaseDate, FallbackValue=11/27/2019}"
                                       Margin="2,0,10,1"
                                       Style="{StaticResource ModInfoDetailsStyle}"/>

                                <TextBlock Text="{DynamicResource CategoryLabel}" Style="{StaticResource ModInfoLabelStyle}"/>
                                <TextBlock Text="{Binding PreviewModCategory, FallbackValue=Animatons}"
                                       Margin="2,0,0,1"
                                       Style="{StaticResource ModInfoDetailsStyle}"/>
                            </WrapPanel>

                            <WrapPanel Margin="3,3,3,0" Grid.Row="3">
                                <TextBlock Text="{DynamicResource VersionLabel}" Style="{StaticResource ModInfoLabelStyle}"
                                       Margin="0,0,3,1"/>
                                <TextBlock Text="{Binding PreviewModVersion, FallbackValue=1.3}"
                                       Margin="2,0,3,1"
                                       Style="{StaticResource ModInfoDetailsStyle}"/>

                                <Button x:Name="btnUpdateMod" 
                                    Content="{Binding UpdateModButtonText, FallbackValue=Update Available}"
                                    IsEnabled="{Binding IsUpdateModButtonEnabled}"
                                    Visibility="{Binding ModUpdateMenuVisibility}"
                                    Click="btnUpdateMod_Click"
                                    Style="{StaticResource HyperlinkButton}"
                                    FontSize="12"
                                    Margin="0,0,0,0"
                                    MinWidth="120"
                                    Background="Transparent"/>
                                <ToggleButton x:Name="btnUpdateModType"
                                          Click="btnUpdateModType_Click"
                                          Visibility="{Binding ModUpdateMenuVisibility}"
                                          Style="{StaticResource DownArrowToggleButton}"
                                          Background="Transparent"/>
                            </WrapPanel>

                            <Popup x:Name="popupModUpdateType"
                               StaysOpen="False"
                               Closed="popupModUpdateType_Closed"
                               PlacementTarget="{Binding ElementName=btnUpdateModType}" 
                               HorizontalOffset="-116">
                                <Border x:Name="bd" BorderBrush="{DynamicResource PrimaryControlBackground}" BorderThickness="1">
                                    <StackPanel Background="{DynamicResource SecondaryAppBackground}">
                                        <RadioButton FontSize="12" IsChecked="{Binding PreviewIsAutoUpdateModsChecked, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Content="{DynamicResource AutoUpdateInstall}" Margin="5,3,5,3" GroupName="modUpdateType"/>
                                        <RadioButton FontSize="12" IsChecked="{Binding PreviewIgnoreModUpdatesChecked, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Content="{DynamicResource Ignore}" Margin="5,3,5,3" GroupName="modUpdateType"/>
                                        <RadioButton FontSize="12" IsChecked="{Binding PreviewIsNotifyAboutUpdatesChecked, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Content="{DynamicResource Notify}" Margin="5,3,5,3" GroupName="modUpdateType"/>
                                    </StackPanel>
                                </Border>
                            </Popup>

                            <WrapPanel Margin="3,0,3,0" Grid.Row="4">
                                <TextBlock Text="{DynamicResource DescriptionLabel}" Style="{StaticResource ModInfoLabelStyle}"/>
                                <TextBlock Text="{Binding PreviewModDescription, FallbackValue=This is a short description of my cool new mod and it does these things like a and b and even x and y.}" 
                               Style="{StaticResource ModInfoDetailsStyle}"/>
                            </WrapPanel>

                            <WrapPanel Margin="3,0,3,0" Grid.Row="5">
                                <TextBlock Text="{DynamicResource LinkLabel}" Style="{StaticResource ModInfoLabelStyle}" Margin="0,1,0,3"/>
                                <Button x:Name="btnOpenModLink" 
                                    MinWidth="80"
                                    FontSize="12"
                                    Background="Transparent"
                                    Margin="2,0,5,0"
                                    Click="btnOpenModLink_Click"
                                    ToolTip="{Binding PreviewModLink}"
                                    IsEnabled="{Binding PreviewModHasLink, FallbackValue=False}"
                                    Style="{StaticResource OpenLinkStyle}"/>

                                <TextBlock Text="{DynamicResource ReadmeLabel}" Style="{StaticResource ModInfoLabelStyle}" Margin="0,1,0,3"
                                       Visibility="{Binding ReadmeVisibility, FallbackValue=Visible}"/>
                                <Button x:Name="btnOpenModReadme"
                                    Click="btnOpenModReadme_Click"
                                    FontSize="12"
                                    Background="Transparent"
                                    MinWidth="80"
                                    Margin="2,0,10,0"
                                    Visibility="{Binding ReadmeVisibility, FallbackValue=Visible}"
                                    IsEnabled="{Binding PreviewModHasReadMe, FallbackValue=False}"
                                    Style="{StaticResource ReadMeStyle}"/>
                            </WrapPanel>


                            <WrapPanel Margin="3,0,3,0" Grid.Row="6">
                                <TextBlock Text="{DynamicResource ReleaseNotesLabel}" Style="{StaticResource ModInfoLabelStyle}"/>
                                <TextBlock Text="{Binding PreviewModReleaseNotes, FallbackValue=Some notes about this mod...}" 
                                       Style="{StaticResource ModInfoDetailsStyle}"/>
                            </WrapPanel>
                        </Grid>
                    </ScrollViewer>


                    <!--Loader gif shown when image is loading-->
                    <Image Grid.Row="1"
                       Margin="3"
                       HorizontalAlignment="Center"
                       VerticalAlignment="Center"
                       Stretch="Uniform"
                       Height="64"
                       Visibility="{Binding LoadingGifVisibility}"
                       RenderOptions.BitmapScalingMode="HighQuality"
                       gif:AnimationBehavior.AutoStart="True"
                       gif:AnimationBehavior.RepeatBehavior="Forever"
                       gif:AnimationBehavior.SourceUri="/SeventhHeaven;component/Resources/circleLoader.gif"/>


                    <Image Grid.Row="1"
                       Margin="3"
                       HorizontalAlignment="Stretch"
                       VerticalAlignment="Bottom"
                       Stretch="Uniform"
                       RenderOptions.BitmapScalingMode="HighQuality"
                       gif:AnimationBehavior.AutoStart="True"
                       gif:AnimationBehavior.Loaded="Image_Loaded"
                       gif:AnimationBehavior.SourceUri="{Binding PreviewModImageSource}">
                        <Image.Style>
                            <!--Custom style to hide image when loading-->
                            <Style TargetType="{x:Type Image}">
                                <Setter Property="Visibility" Value="Visible"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding PreviewModImageSource, FallbackValue=''}" Value="{x:Null}">
                                        <Setter Property="Visibility" Value="Hidden"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Image.Style>
                    </Image>

                    <TextBlock Grid.Row="1"
                           Foreground="{DynamicResource PrimaryControlDisabledForeground}"
                           Visibility="{Binding NoImageTextVisibility}"
                           HorizontalAlignment="Center"
                           VerticalAlignment="Center"
                           Text="{DynamicResource NoPreviewImage}"/>


                </Grid>
            </GroupBox>

            <Grid Grid.Column="2"
              Margin="0,25,56,0"
              HorizontalAlignment="Right"
              VerticalAlignment="Top" Height="24" Width="260" Grid.ColumnSpan="2" d:IsHidden="True">

                <TextBox x:Name="txtSearch"
                     Text="{Binding SearchText, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                     TextChanged="txtSearch_TextChanged"
                     KeyDown="txtSearch_KeyDown"
                     Grid.Column="2"
                     HorizontalAlignment="Right"
                     VerticalAlignment="Top"
                     VerticalContentAlignment="Center"
                     Panel.ZIndex="10"
                     Width="260"
                     Height="24"/>

                <TextBlock x:Name="txtPlaceholder" Text="{DynamicResource SearchHint}"
                       Foreground="{DynamicResource PrimaryControlDisabledForeground}"
                       Grid.Column="2"
                       IsHitTestVisible="False"
                       Panel.ZIndex="10"
                       HorizontalAlignment="Left"
                       VerticalAlignment="Top"
                       Margin="5,4,0,0">
                    <TextBlock.Style>
                        <Style TargetType="{x:Type TextBlock}">
                            <Setter Property="Visibility" Value="Hidden"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding SearchText, FallbackValue=''}" Value="">
                                    <Setter Property="Visibility" Value="Visible"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </TextBlock.Style>
                </TextBlock>

                <ToggleButton x:Name="btnFilters"
                          ClickMode="Release"
                          Click="btnFilters_Click"
                          ToolTip="{DynamicResource FiltersTooltip}"
                          Style="{StaticResource DownArrowToggleButton}"
                          Background="Transparent"
                          Width="24"
                          Height="22"
                          Grid.Column="2"
                          HorizontalAlignment="Right"
                          VerticalAlignment="Top"
                          VerticalContentAlignment="Center"
                          Panel.ZIndex="10"
                          Margin="0,1,0,0"/>
            </Grid>


            <Popup x:Name="popupFilters"
               Closed="popupFilters_Closed"
               Placement="Bottom"
               HorizontalOffset="-140"
               PlacementTarget="{Binding ElementName=btnFilters}"
               StaysOpen="False" Grid.ColumnSpan="2" Margin="0,0,0,26" d:IsHidden="True">
                <Grid d:IsHidden="True">
                    <ListBox MinWidth="165"
                         FontSize="13"
                         MaxHeight="225"
                         ScrollViewer.CanContentScroll="False"
                         ItemsSource="{Binding AvailableFilters}"
                         Background="{DynamicResource PrimaryControlBackground}"
                         BorderBrush="{DynamicResource SecondaryAppBackground}" 
                         ItemContainerStyle="{StaticResource CategoryFilterListBoxItem}"/>
                    <TabControl x:Name="tabCtrlMain"
                    Grid.Row="0"
                    Grid.Column="2"
                    SelectedIndex="{Binding SelectedTabIndex, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                    SelectionChanged="tabCtrlMain_SelectionChanged"
                    Margin="0,0,-1087,-544" d:IsHidden="True" HorizontalAlignment="Right" Height="521" VerticalAlignment="Bottom" Width="690">
                        <TabItem Padding="10,0,10,0"
                     ToolTip="{DynamicResource MyModsTooltip}"
                     MouseRightButtonUp="MyModsTabItem_MouseRightButtonUp">
                            <TabItem.Header>
                                <TextBlock Text="{DynamicResource MyMods}"
                               PreviewMouseRightButtonUp="MyModsTabItem_MouseRightButtonUp"
                               Padding="0"/>
                            </TabItem.Header>

                            <ctrl:MyModsUserControl x:Name="ctrlMyMods"/>
                        </TabItem>
                        <TabItem MouseRightButtonUp="BrowseCatalogTabItem_MouseRightButtonUp"
                     ToolTip="{DynamicResource BrowseCatalogTooltip}">
                            <TabItem.Header>
                                <TextBlock Text="{DynamicResource BrowseCatalog}"
                               PreviewMouseRightButtonUp="BrowseCatalogTabItem_MouseRightButtonUp"
                               Padding="0"/>
                            </TabItem.Header>

                            <ctrl:CatalogUserControl x:Name="ctrlCatalog"/>
                        </TabItem>
                        <Image Margin="0" 
            Source="{Binding ThemeImage}" 
            Opacity="0.25" 
            IsHitTestVisible="False" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </TabControl>
                </Grid>
            </Popup>



            <StatusBar  Grid.Row="3" Grid.ColumnSpan="4" Margin="0,5,0,0" IsTabStop="False" d:IsHidden="True">
                <StatusBarItem x:Name="statusBarItem" Height="22" IsTabStop="False">
                    <StatusBarItem.Style>
                        <Style TargetType="{x:Type StatusBarItem}" BasedOn="{StaticResource MainStatusBarStyle}">
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type StatusBarItem}">
                                        <Border Background="{DynamicResource SecondaryAppBackground}">
                                            <Grid>
                                                <Button x:Name="btnOpenAppLog" 
                                                    Click="btnOpenAppLog_Click"
                                                    Height="{TemplateBinding Height}"
                                                    Style="{StaticResource MainButtonStyleWithNoTriggers}"
                                                    Cursor="Hand"
                                                    ToolTip="{DynamicResource StatusBarTooltip}"
                                                    ToolTipService.InitialShowDelay="250"
                                                    IsTabStop="False"
                                                    Background="Transparent"/>


                                                <TextBlock x:Name="txtStatusMessage"
                                                       Text="{Binding StatusMessage, FallbackValue=Some message to the user ...}"
                                                       IsHitTestVisible="False"
                                                       Padding="5,1,0,1"
                                                       TextTrimming="CharacterEllipsis"
                                                       VerticalAlignment="Center"
                                                       TextWrapping="Wrap"/>
                                            </Grid>
                                        </Border>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>

                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsFlashingStatus}" Value="True">
                                    <DataTrigger.EnterActions>
                                        <BeginStoryboard x:Name="beginStory">
                                            <Storyboard AutoReverse="True" RepeatBehavior="Forever" SpeedRatio="8">
                                                <DoubleAnimation Storyboard.TargetProperty="Opacity" 
                                                             From="1" To="0.75" Duration="0:0:1" AutoReverse="True"/>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </DataTrigger.EnterActions>
                                    <DataTrigger.ExitActions>
                                        <StopStoryboard BeginStoryboardName="beginStory"/>
                                    </DataTrigger.ExitActions>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </StatusBarItem.Style>
                </StatusBarItem>
            </StatusBar>
        </Grid>
        <Grid>
            <Image x:Name="light_bg_image" Margin="31,42,49,175" x:FieldModifier="public" Panel.ZIndex="1"/>
            <ProgressBar Height="30" Margin="153,0,151,73" VerticalAlignment="Bottom" Value="25"/>
            <Label Content="MODNAME" HorizontalAlignment="Left" Height="30" Margin="154,406,0,0" VerticalAlignment="Top" Width="223" Foreground="#FFBF0000" FontWeight="Bold"/>
        </Grid>
    </Grid>
</Window>
